# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['newscatcher']

package_data = \
{'': ['*'], 'newscatcher': ['data/*']}

install_requires = \
['feedparser>=6.0.0,<6.0.8',
 'requests>=2.23.0,<3.0.0',
 'tldextract>=2.2.2,<3.0.0']

setup_kwargs = {
    'name': 'newscatcher',
    'version': '0.2.0',
    'description': 'Get the normalized latest news from (almost) any website',
    'long_description': "# Newscatcher\n**Programmatically collect normalized news from (almost) any website.**\n\nFilter by **topic**, **country**, or **language**.\n\nBy [newscatcherapi.com](https://www.newscatcherapi.com) (*this package is fully \nself-sufficient, you can just use it. No dependency on external services/API*)\n\n## Demo\n![](newscatcherdemo.gif)\n\n## Motivation\nWhile working on [newscatcherapi](https://newscatcherapi.com/) - JSON API \nto query news articles,\nI came up with an idea to make a simple Python package that would allow\nto easily grab the live news data. \n\nWhen I used to be a junior data scientist working on my own side projects,\nit was difficult for me to operate with external data sources. I knew Python\nquite well, but in most cases it was not enough to build proper data pipelines\nthat required gathering data on my own. I hope that this package will help you \nwith your next project. \n\nEven though I do not recommend to use this package for any production systems, \nI believe that it should be enough to test your assumptions and build some MVPs.\n\n## Installation\n`pip install newscatcher --upgrade` \n\n\n## Quick Start\n```python\nfrom newscatcher import Newscatcher\n```\n\nGet the latest news from [nytimes.com](https://www.nytimes.com/) \n(_we support thousands of news websites, try yourself!_) main news feed\n```python\nnc = Newscatcher(website = 'nytimes.com')\nresults = nc.get_news()\n\n# results.keys()\n# 'url', 'topic', 'language', 'country', 'articles'\n\n# Get the articles\narticles = results['articles']\n\nfirst_article_summary = articles[0]['summary']\nfirst_article_title = articles[0]['title']\n```\n\nGet the latest news from [nytimes.com](https://www.nytimes.com/) **politics** feed\n\n```python\nnc = Newscatcher(website = 'nytimes.com', topic = 'politics')\n\nresults = nc.get_news()\narticles = results['articles']\n```\n\nThere is a limited set of topic that you might find:\n\n``` 'tech', 'news', 'business', 'science', 'finance', 'food', 'politics', 'economics', 'travel', 'entertainment', 'music', 'sport', 'world' ```\n\nHowever, not all topics are supported by every newspaper.\n\nHow to check which topics are supported by which newspaper:\n```python\nfrom newscatcher import describe_url\n\ndescribe = describe_url('nytimes.com')\n\nprint(describe['topics'])\n```\n\n\n### Get the list of all news feeds by topic/language/country\nIf you want to find the full list of supported news websites \nyou can always do so using `urls()` function\n```python\nfrom newscatcher import urls\n\n# URLs by TOPIC\npolitic_urls = urls(topic = 'politics')\n\n# URLs by COUNTRY\namerican_urls = urls(country = 'US')\n\n# URLs by LANGUAGE\nenglish_urls = urls(language = 'en')\n\n# Combine any from topic, country, language\namerican_english_politics_urls = urls(country = 'US', topic = 'politics', language = 'en') \n\n# note some websites do not explicitly declare their language \n# as a result they will be excluded from queries based on language\n```\n\n\n\n\n## Documentation\n\n### `Newscatcher` Class\n```python\nfrom newscatcher import Newscatcher\n\nNewscatcher(website, topic = None)\n```\n**Please take the base form url of a website** (without `www.`,neither `https://`, nor `/` at the end of url).\n\nFor example: “nytimes”.com, “news.ycombinator.com” or “theverge.com”.\n___\n`Newscatcher.get_news()` - Get the latest news from the website of interest.\n\nAllowed topics:\n`tech`, `news`, `business`, `science`, `finance`, `food`, \n`politics`, `economics`, `travel`, `entertainment`, \n`music`, `sport`, `world`\n\nIf no topic is provided, the main feed is returned.\n\nReturns a dictionary of 5 elements:\n1. `url` - URL of the website\n2. `topic` - topic of the returned feed\n3. `language` - language of returned feed\n4. `country` - country of returned feed\n5. `articles` - articles of the feed. [Feedparser object]((https://pythonhosted.org/feedparser/reference.html))\n\n___\n\n`Newscatcher.get_headlines()` - Returns only the headlines\n\n___\n`Newscatcher.print_headlines(n)` - Print top `n` headlines\n\n\n<br> \n<br> \n<br> \n\n### `describe_url()` & `urls()`\nThose functions exist to help you navigate through this package\n\n___\n```python\nfrom newscatcher import describe_url\n```\n\n`describe_url(website)` - Get the main info on the website. \n\nReturns a dictionary of 5 elements:\n1. `url` - URL of the website\n2. `topics` - list of all supported topics\n3. `language` - language of website\n4. `country` - country of returned feed\n5. `main_topic` - main topic of a website\n\n___\n```python\nfrom newscatcher import urls\n```\n\n`urls(topic = None, language = None, country = None)` - Get a list of all supported \nnews websites given any combination of `topic`, `language`, `country`\n\nReturns a list of websites that match your combination of `topic`, `language`, `country`\n\nSupported topics:\n`tech`, `news`, `business`, `science`, `finance`, `food`, \n`politics`, `economics`, `travel`, `entertainment`, \n`music`, `sport`, `world`\n\n\nSupported countries:\n`US`, `GB`, `DE`, `FR`, `IN`, `RU`, `ES`, `BR`, `IT`, `CA`, `AU`, `NL`, `PL`, `NZ`, `PT`, `RO`, `UA`, `JP`, `AR`, `IR`, `IE`, `PH`, `IS`, `ZA`, `AT`, `CL`, `HR`, `BG`, `HU`, `KR`, `SZ`, `AE`, `EG`, `VE`, `CO`, `SE`, `CZ`, `ZH`, `MT`, `AZ`, `GR`, `BE`, `LU`, `IL`, `LT`, `NI`, `MY`, `TR`, `BM`, `NO`, `ME`, `SA`, `RS`, `BA`\n\nSupported languages:\n`EL`, `IT`, `ZH`, `EN`, `RU`, `CS`, `RO`, `FR`, `JA`, `DE`, `PT`, `ES`, `AR`, `HE`, `UK`, `PL`, `NL`, `TR`, `VI`, `KO`, `TH`, `ID`, `HR`, `DA`, `BG`, `NO`, `SK`, `FA`, `ET`, `SV`, `BN`, `GU`, `MK`, `PA`, `HU`, `SL`, `FI`, `LT`, `MR`, `HI`\n\n\n\n\n\n## Tech/framework used\nThe package itself is nothing more than a SQLite database with \nRSS feed endpoints for each website and some basic wrapper of\n[feedparser](https://pythonhosted.org/feedparser/index.html).\n\n\n## About Us\nWe are Newscatcher API team. We are glad that you liked our package.\n\nIf you want to search for any news data, consider using [our API](https://newscatcherapi.com/)\n\n![](newscatcher_oneliner.png)\n\n\n[Artem Bugara]() - co-founder of Newscatcher, made v.0.1.0\n\n[Maksym Sugonyaka](https://www.linkedin.com/mwlite/in/msugonyaka) - co-founder of Newscatcher, made v.0.1.0\n\n[Becket Trotter](https://www.linkedin.com/in/beckettrotter/) - Python Developer, made v.0.2.0\n\n## Licence\nMIT\n",
    'author': 'Artem Bugara',
    'author_email': 'bugara.artem@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://www.newscatcherapi.com',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
